name: "Check Pull Request Readiness"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  pr-name-check:
    name: PR name check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 5
    env:
      PR_NAME: ${{ github.event.pull_request.title }}
      PR_AUTHOR: ${{ github.actor }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: PR name check
        run: |
          bash config/venv_setup.sh && bash config/stage_1_style_tests/_stage_pr_name_check.sh "$PR_NAME" "$PR_AUTHOR"

  code-style:
    name: Code Style
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Code Style
        run: |
          bash config/venv_setup.sh && bash config/stage_1_style_tests/_stage_run_lint.sh

  type-check:
    name: Check types
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ code-style ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Code Style (Typings)
        run: |
          bash config/venv_setup.sh && bash config/stage_1_style_tests/_stage_run_mypy.sh

  unittests:
    name: Unittests
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Run tests
        run: |
          bash config/venv_setup.sh && bash config/run_tests.sh

  start:
    name: Check start.py
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Run start
        run: |
          bash config/venv_setup.sh && bash config/run_start.sh

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ unittests ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Run start
        run: |
          bash config/venv_setup.sh && bash config/collect_coverage/run_coverage.sh

  spellcheck:
    name: Spellcheck
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@master
      - name: Install Aspell
        run: |
          sudo apt-get install aspell aspell-en aspell-ru
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Spell check
        run: |
          bash config/venv_setup.sh && bash config/spellcheck/_stage_spellcheck.sh

  stubgen:
    name: Stub generation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [ spellcheck ]
    steps:
      - uses: actions/checkout@master
      - name: Install Aspell
        run: |
          sudo apt-get install aspell aspell-en aspell-ru
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Stubgen check
        run: |
          bash config/venv_setup.sh && bash config/stage_1_style_tests/_stage_run_stubgen.sh
